{"version":3,"file":"rgb-color.js","sources":["../src/named-colors.js","../src/color-defs.js","../src/rgb-color.js"],"sourcesContent":["const namedColors = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '00ffff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000000',\n  blanchedalmond: 'ffebcd',\n  blue: '0000ff',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '00ffff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dodgerblue: '1e90ff',\n  feldspar: 'd19275',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'ff00ff',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgrey: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslateblue: '8470ff',\n  lightslategray: '778899',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '00ff00',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'ff00ff',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370d8',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'd87093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  red: 'ff0000',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  violetred: 'd02090',\n  wheat: 'f5deb3',\n  white: 'ffffff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ffff00',\n  yellowgreen: '9acd32',\n};\n\nexport default namedColors;\n","const colorDefs = [\n  {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n    process(bits) {\n      return [\n        parseInt(bits[1], 10),\n        parseInt(bits[2], 10),\n        parseInt(bits[3], 10),\n      ];\n    },\n  },\n  {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    example: ['#00ff00', '336699'],\n    process(bits) {\n      return [\n        parseInt(bits[1], 16),\n        parseInt(bits[2], 16),\n        parseInt(bits[3], 16),\n      ];\n    },\n  },\n  {\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.?\\d+)\\)$/,\n    example: ['rgba(123, 234, 45, .5)', 'rgba(255,234,245, 0.20)'],\n    process(bits) {\n      console.log(bits);\n      return [\n        parseInt(bits[1], 10),\n        parseInt(bits[2], 10),\n        parseInt(bits[3], 10),\n        +bits[4],\n      ];\n    },\n  },\n  {\n    re: /^(\\w{2})(\\w{2})(\\w{2})(\\w{2})$/,\n    example: ['#00ff00ff', '#3366992f'],\n    process(bits) {\n      return [\n        parseInt(bits[1], 16),\n        parseInt(bits[2], 16),\n        parseInt(bits[3], 16),\n        parseInt(bits[4], 16) / 255.0,\n      ];\n    },\n  },\n  {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    example: ['#fb0', 'f0f'],\n    process(bits) {\n      return [\n        parseInt(bits[1] + bits[1], 16),\n        parseInt(bits[2] + bits[2], 16),\n        parseInt(bits[3] + bits[3], 16),\n      ];\n    },\n  },\n];\n\nexport default colorDefs;\n","import rgbHex from 'rgb-hex';\nimport namedColors from './named-colors';\nimport colorDefs from './color-defs';\n\n/**\n * RGBColor\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\nclass RGBColor {\n  constructor(color) {\n    let colorString = color;\n    this.ok = false;\n\n    // just accept strings\n    if (!(typeof colorString === 'string')) {\n      return;\n    }\n\n    // strip any leading #\n    if (colorString.charAt(0) === '#') {\n      // remove # if any\n      colorString = colorString.substr(1, 8);\n    }\n\n    colorString = colorString.replace(/ /g, '').toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    if (Object.prototype.hasOwnProperty.call(namedColors, colorString)) {\n      ({ [colorString]: colorString } = namedColors);\n    }\n    // emd of simple type-in colors\n\n    // search through the definitions to find a match\n    for (let i = 0; i < colorDefs.length; i += 1) {\n      const def = colorDefs[i];\n      const bits = def.re.exec(colorString);\n      if (bits) {\n        [this.r, this.g, this.b, this.a] = def.process(bits);\n        this.ok = true;\n      }\n    }\n\n    // validate/cleanup values\n    if (this.r < 0 || Number.isNaN(this.r) || this.r == null) {\n      this.r = 0;\n    } else if (this.r > 255) {\n      this.r = 255;\n    }\n    if (this.g < 0 || Number.isNaN(this.g) || this.g == null) {\n      this.g = 0;\n    } else if (this.g > 255) {\n      this.g = 255;\n    }\n    if (this.b < 0 || Number.isNaN(this.b) || this.b == null) {\n      this.b = 0;\n    } else if (this.b > 255) {\n      this.b = 255;\n    }\n    if (this.a < 0 || Number.isNaN(this.a)) {\n      this.a = undefined;\n    } else if (this.a > 255) {\n      this.a = 1;\n    }\n  }\n\n  isValid() {\n    return this.ok;\n  }\n\n  rgb() {\n    const { r, g, b, a } = this; // eslint-disable-line object-curly-newline\n    if (a) {\n      return `rgba(${[r, g, b, a].join(', ')})`;\n    }\n    return `rgb(${[r, g, b].join(', ')})`;\n  }\n\n  hex() {\n    console.log(this);\n    return `#${rgbHex(this.r, this.g, this.b, this.a)}`;\n  }\n\n  channels() {\n    const { ok, a, ...rest } = this;\n    return a ? { a, ...rest } : rest;\n  }\n}\n\nexport default function rgbcolor(color) {\n  return new RGBColor(color);\n}\n"],"names":["namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","colorDefs","re","example","process","bits","parseInt","console","log","RGBColor","color","colorString","ok","charAt","substr","replace","toLowerCase","Object","prototype","hasOwnProperty","call","i","length","def","exec","r","g","b","a","Number","isNaN","undefined","join","rgbHex","rest","rgbcolor"],"mappings":"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"}